{"version":3,"sources":["../../src/api/ActivityServiceApi.js"],"names":["ActivityServiceApi","apiClient","ApiClient","instance","body","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","RestSubscriptionsCollection","callApi","searchSubscriptionsWithHttpInfo","then","response_and_data","data","ActivityObject","streamWithHttpInfo","ActivitySubscription","subscribeWithHttpInfo"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport ActivityObject from '../model/ActivityObject';\nimport ActivitySearchSubscriptionsRequest from '../model/ActivitySearchSubscriptionsRequest';\nimport ActivityStreamActivitiesRequest from '../model/ActivityStreamActivitiesRequest';\nimport ActivitySubscription from '../model/ActivitySubscription';\nimport RestError from '../model/RestError';\nimport RestSubscriptionsCollection from '../model/RestSubscriptionsCollection';\n\n/**\n* ActivityService service.\n* @module api/ActivityServiceApi\n* @version 4.0\n*/\nexport default class ActivityServiceApi {\n\n    /**\n    * Constructs a new ActivityServiceApi. \n    * @alias module:api/ActivityServiceApi\n    * @class\n    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Load subscriptions to other users/nodes feeds\n     * @param {module:model/ActivitySearchSubscriptionsRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestSubscriptionsCollection} and HTTP response\n     */\n    searchSubscriptionsWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling searchSubscriptions\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = RestSubscriptionsCollection;\n      return this.apiClient.callApi(\n        '/activity/subscriptions', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Load subscriptions to other users/nodes feeds\n     * @param {module:model/ActivitySearchSubscriptionsRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestSubscriptionsCollection}\n     */\n    searchSubscriptions(body) {\n      return this.searchSubscriptionsWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Load the the feeds of the currently logged user\n     * @param {module:model/ActivityStreamActivitiesRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ActivityObject} and HTTP response\n     */\n    streamWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling stream\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = ActivityObject;\n      return this.apiClient.callApi(\n        '/activity/stream', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Load the the feeds of the currently logged user\n     * @param {module:model/ActivityStreamActivitiesRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ActivityObject}\n     */\n    stream(body) {\n      return this.streamWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Manage subscriptions to other users/nodes feeds\n     * @param {module:model/ActivitySubscription} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ActivitySubscription} and HTTP response\n     */\n    subscribeWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling subscribe\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = ActivitySubscription;\n      return this.apiClient.callApi(\n        '/activity/subscribe', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Manage subscriptions to other users/nodes feeds\n     * @param {module:model/ActivitySubscription} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ActivitySubscription}\n     */\n    subscribe(body) {\n      return this.subscribeWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"ActivityServiceApi.js"}