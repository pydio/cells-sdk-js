{"version":3,"sources":["../../src/api/InstallServiceApi.js"],"names":["InstallServiceApi","apiClient","ApiClient","instance","postBody","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","InstallGetAgreementResponse","callApi","getAgreementWithHttpInfo","then","response_and_data","data","InstallGetDefaultsResponse","getInstallWithHttpInfo","InstallInstallEventsResponse","installEventsWithHttpInfo","body","undefined","Error","InstallPerformCheckResponse","performInstallCheckWithHttpInfo","InstallInstallResponse","postInstallWithHttpInfo"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport InstallGetAgreementResponse from '../model/InstallGetAgreementResponse';\nimport InstallGetDefaultsResponse from '../model/InstallGetDefaultsResponse';\nimport InstallInstallEventsResponse from '../model/InstallInstallEventsResponse';\nimport InstallInstallRequest from '../model/InstallInstallRequest';\nimport InstallInstallResponse from '../model/InstallInstallResponse';\nimport InstallPerformCheckRequest from '../model/InstallPerformCheckRequest';\nimport InstallPerformCheckResponse from '../model/InstallPerformCheckResponse';\nimport RestError from '../model/RestError';\n\n/**\n* InstallService service.\n* @module api/InstallServiceApi\n* @version 4.0\n*/\nexport default class InstallServiceApi {\n\n    /**\n    * Constructs a new InstallServiceApi. \n    * @alias module:api/InstallServiceApi\n    * @class\n    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Load a textual agreement for using the software\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallGetAgreementResponse} and HTTP response\n     */\n    getAgreementWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = InstallGetAgreementResponse;\n      return this.apiClient.callApi(\n        '/install/agreement', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Load a textual agreement for using the software\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallGetAgreementResponse}\n     */\n    getAgreement() {\n      return this.getAgreementWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Loads default values for install form\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallGetDefaultsResponse} and HTTP response\n     */\n    getInstallWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = InstallGetDefaultsResponse;\n      return this.apiClient.callApi(\n        '/install', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Loads default values for install form\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallGetDefaultsResponse}\n     */\n    getInstall() {\n      return this.getInstallWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallInstallEventsResponse} and HTTP response\n     */\n    installEventsWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = InstallInstallEventsResponse;\n      return this.apiClient.callApi(\n        '/install/events', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallInstallEventsResponse}\n     */\n    installEvents() {\n      return this.installEventsWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Perform a check during install (like a valid DB connection)\n     * @param {module:model/InstallPerformCheckRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallPerformCheckResponse} and HTTP response\n     */\n    performInstallCheckWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling performInstallCheck\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = InstallPerformCheckResponse;\n      return this.apiClient.callApi(\n        '/install/check', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Perform a check during install (like a valid DB connection)\n     * @param {module:model/InstallPerformCheckRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallPerformCheckResponse}\n     */\n    performInstallCheck(body) {\n      return this.performInstallCheckWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Post values to be saved for install\n     * @param {module:model/InstallInstallRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InstallInstallResponse} and HTTP response\n     */\n    postInstallWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling postInstall\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = InstallInstallResponse;\n      return this.apiClient.callApi(\n        '/install', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Post values to be saved for install\n     * @param {module:model/InstallInstallRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InstallInstallResponse}\n     */\n    postInstall(body) {\n      return this.postInstallWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"InstallServiceApi.js"}