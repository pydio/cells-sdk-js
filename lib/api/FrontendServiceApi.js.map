{"version":3,"sources":["../../src/api/FrontendServiceApi.js"],"names":["FrontendServiceApi","apiClient","ApiClient","instance","postBody","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","RestFrontBootConfResponse","callApi","frontBootConfWithHttpInfo","then","response_and_data","data","body","undefined","Error","RestFrontEnrollAuthResponse","frontEnrollAuthWithHttpInfo","Lang","RestFrontMessagesResponse","frontMessagesWithHttpInfo","RestFrontPluginsResponse","frontPluginsWithHttpInfo","BinaryType","Uuid","RestFrontBinaryResponse","frontPutBinaryWithHttpInfo","frontServeBinaryWithHttpInfo","RestFrontSessionResponse","frontSessionWithHttpInfo","opts","RestFrontStateResponse","frontStateWithHttpInfo","RestSettingsMenuResponse","settingsMenuWithHttpInfo"],"mappings":";;;;;;;AAcA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;IACqBA,kB;AAEjB;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,8BAAYC,SAAZ,EAAuB;AAAA;;AACnB,SAAKA,SAAL,GAAiBA,SAAS,IAAIC,sBAAUC,QAAxC;AACH;AAID;AACJ;AACA;AACA;;;;;WACI,qCAA4B;AAC1B,UAAIC,QAAQ,GAAG,IAAf;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAEA,UAAIC,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGC,qCAAjB;AACA,aAAO,KAAKZ,SAAL,CAAea,OAAf,CACL,oBADK,EACiB,KADjB,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;;;;WACI,yBAAgB;AACd,aAAO,KAAKG,yBAAL,GACJC,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;;;;WACI,qCAA4BC,IAA5B,EAAkC;AAChC,UAAIf,QAAQ,GAAGe,IAAf,CADgC,CAEhC;;AACA,UAAIA,IAAI,KAAKC,SAAT,IAAsBD,IAAI,KAAK,IAAnC,EAAyC;AACvC,cAAM,IAAIE,KAAJ,CAAU,oEAAV,CAAN;AACD;;AAED,UAAIhB,UAAU,GAAG,EAAjB;AAEA,UAAIC,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,CAAC,kBAAD,CAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGU,uCAAjB;AACA,aAAO,KAAKrB,SAAL,CAAea,OAAf,CACL,kBADK,EACe,MADf,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;;;;WACI,yBAAgBO,IAAhB,EAAsB;AACpB,aAAO,KAAKI,2BAAL,CAAiCJ,IAAjC,EACJH,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;;;;WACI,mCAA0BM,IAA1B,EAAgC;AAC9B,UAAIpB,QAAQ,GAAG,IAAf,CAD8B,CAE9B;;AACA,UAAIoB,IAAI,KAAKJ,SAAT,IAAsBI,IAAI,KAAK,IAAnC,EAAyC;AACvC,cAAM,IAAIH,KAAJ,CAAU,kEAAV,CAAN;AACD;;AAED,UAAIhB,UAAU,GAAG;AACf,gBAAQmB;AADO,OAAjB;AAGA,UAAIlB,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGa,qCAAjB;AACA,aAAO,KAAKxB,SAAL,CAAea,OAAf,CACL,2BADK,EACwB,KADxB,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;;;;WACI,uBAAcY,IAAd,EAAoB;AAClB,aAAO,KAAKE,yBAAL,CAA+BF,IAA/B,EACJR,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;;;;WACI,kCAAyBM,IAAzB,EAA+B;AAC7B,UAAIpB,QAAQ,GAAG,IAAf,CAD6B,CAE7B;;AACA,UAAIoB,IAAI,KAAKJ,SAAT,IAAsBI,IAAI,KAAK,IAAnC,EAAyC;AACvC,cAAM,IAAIH,KAAJ,CAAU,iEAAV,CAAN;AACD;;AAED,UAAIhB,UAAU,GAAG;AACf,gBAAQmB;AADO,OAAjB;AAGA,UAAIlB,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGe,oCAAjB;AACA,aAAO,KAAK1B,SAAL,CAAea,OAAf,CACL,0BADK,EACuB,KADvB,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;;;;WACI,sBAAaY,IAAb,EAAmB;AACjB,aAAO,KAAKI,wBAAL,CAA8BJ,IAA9B,EACJR,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oCAA2BW,UAA3B,EAAuCC,IAAvC,EAA6C;AAC3C,UAAI1B,QAAQ,GAAG,IAAf,CAD2C,CAE3C;;AACA,UAAIyB,UAAU,KAAKT,SAAf,IAA4BS,UAAU,KAAK,IAA/C,EAAqD;AACnD,cAAM,IAAIR,KAAJ,CAAU,yEAAV,CAAN;AACD,OAL0C,CAM3C;;;AACA,UAAIS,IAAI,KAAKV,SAAT,IAAsBU,IAAI,KAAK,IAAnC,EAAyC;AACvC,cAAM,IAAIT,KAAJ,CAAU,mEAAV,CAAN;AACD;;AAED,UAAIhB,UAAU,GAAG;AACf,sBAAcwB,UADC;AAEf,gBAAQC;AAFO,OAAjB;AAIA,UAAIxB,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGmB,mCAAjB;AACA,aAAO,KAAK9B,SAAL,CAAea,OAAf,CACL,wCADK,EACqC,MADrC,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,wBAAeiB,UAAf,EAA2BC,IAA3B,EAAiC;AAC/B,aAAO,KAAKE,0BAAL,CAAgCH,UAAhC,EAA4CC,IAA5C,EACJd,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,sCAA6BW,UAA7B,EAAyCC,IAAzC,EAA+C;AAC7C,UAAI1B,QAAQ,GAAG,IAAf,CAD6C,CAE7C;;AACA,UAAIyB,UAAU,KAAKT,SAAf,IAA4BS,UAAU,KAAK,IAA/C,EAAqD;AACnD,cAAM,IAAIR,KAAJ,CAAU,2EAAV,CAAN;AACD,OAL4C,CAM7C;;;AACA,UAAIS,IAAI,KAAKV,SAAT,IAAsBU,IAAI,KAAK,IAAnC,EAAyC;AACvC,cAAM,IAAIT,KAAJ,CAAU,qEAAV,CAAN;AACD;;AAED,UAAIhB,UAAU,GAAG;AACf,sBAAcwB,UADC;AAEf,gBAAQC;AAFO,OAAjB;AAIA,UAAIxB,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGmB,mCAAjB;AACA,aAAO,KAAK9B,SAAL,CAAea,OAAf,CACL,wCADK,EACqC,KADrC,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0BAAiBiB,UAAjB,EAA6BC,IAA7B,EAAmC;AACjC,aAAO,KAAKG,4BAAL,CAAkCJ,UAAlC,EAA8CC,IAA9C,EACJd,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;;;;WACI,kCAAyBC,IAAzB,EAA+B;AAC7B,UAAIf,QAAQ,GAAGe,IAAf,CAD6B,CAE7B;;AACA,UAAIA,IAAI,KAAKC,SAAT,IAAsBD,IAAI,KAAK,IAAnC,EAAyC;AACvC,cAAM,IAAIE,KAAJ,CAAU,iEAAV,CAAN;AACD;;AAED,UAAIhB,UAAU,GAAG,EAAjB;AAEA,UAAIC,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,CAAC,kBAAD,CAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGsB,oCAAjB;AACA,aAAO,KAAKjC,SAAL,CAAea,OAAf,CACL,mBADK,EACgB,MADhB,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;;;;WACI,sBAAaO,IAAb,EAAmB;AACjB,aAAO,KAAKgB,wBAAL,CAA8BhB,IAA9B,EACJH,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,gCAAuBkB,IAAvB,EAA6B;AAC3BA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,UAAIhC,QAAQ,GAAG,IAAf;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAEA,UAAIC,WAAW,GAAG;AAChB,iBAAS8B,IAAI,CAAC,OAAD;AADG,OAAlB;AAGA,UAAI7B,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAGyB,kCAAjB;AACA,aAAO,KAAKpC,SAAL,CAAea,OAAf,CACL,iBADK,EACc,KADd,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oBAAWwB,IAAX,EAAiB;AACf,aAAO,KAAKE,sBAAL,CAA4BF,IAA5B,EACJpB,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID;AAGD;AACJ;AACA;AACA;;;;WACI,oCAA2B;AACzB,UAAId,QAAQ,GAAG,IAAf;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAEA,UAAIC,WAAW,GAAG,EAAlB;AAEA,UAAIC,YAAY,GAAG,EAAnB;AAEA,UAAIC,UAAU,GAAG,EAAjB;AAGA,UAAIC,SAAS,GAAG,EAAhB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,OAAO,GAAG,CAAC,kBAAD,CAAd;AACA,UAAIC,UAAU,GAAG2B,oCAAjB;AACA,aAAO,KAAKtC,SAAL,CAAea,OAAf,CACL,yBADK,EACsB,KADtB,EAELT,UAFK,EAEOC,WAFP,EAEoBC,YAFpB,EAEkCC,UAFlC,EAE8CJ,QAF9C,EAGLK,SAHK,EAGMC,YAHN,EAGoBC,OAHpB,EAG6BC,UAH7B,EAGyC,IAHzC,CAAP;AAKD;AAED;AACJ;AACA;AACA;;;;WACI,wBAAe;AACb,aAAO,KAAK4B,wBAAL,GACJxB,IADI,CACC,UAASC,iBAAT,EAA4B;AAChC,eAAOA,iBAAiB,CAACC,IAAzB;AACD,OAHI,CAAP;AAID","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport RestError from '../model/RestError';\nimport RestFrontBinaryResponse from '../model/RestFrontBinaryResponse';\nimport RestFrontBootConfResponse from '../model/RestFrontBootConfResponse';\nimport RestFrontEnrollAuthRequest from '../model/RestFrontEnrollAuthRequest';\nimport RestFrontEnrollAuthResponse from '../model/RestFrontEnrollAuthResponse';\nimport RestFrontMessagesResponse from '../model/RestFrontMessagesResponse';\nimport RestFrontPluginsResponse from '../model/RestFrontPluginsResponse';\nimport RestFrontSessionRequest from '../model/RestFrontSessionRequest';\nimport RestFrontSessionResponse from '../model/RestFrontSessionResponse';\nimport RestFrontStateResponse from '../model/RestFrontStateResponse';\nimport RestSettingsMenuResponse from '../model/RestSettingsMenuResponse';\n\n/**\n* FrontendService service.\n* @module api/FrontendServiceApi\n* @version 4.0\n*/\nexport default class FrontendServiceApi {\n\n    /**\n    * Constructs a new FrontendServiceApi. \n    * @alias module:api/FrontendServiceApi\n    * @class\n    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Add some data to the initial set of parameters loaded by the frontend\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBootConfResponse} and HTTP response\n     */\n    frontBootConfWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = RestFrontBootConfResponse;\n      return this.apiClient.callApi(\n        '/frontend/bootconf', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Add some data to the initial set of parameters loaded by the frontend\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBootConfResponse}\n     */\n    frontBootConf() {\n      return this.frontBootConfWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Generic endpoint that can be implemented by 2FA systems for enrollment\n     * @param {module:model/RestFrontEnrollAuthRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontEnrollAuthResponse} and HTTP response\n     */\n    frontEnrollAuthWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling frontEnrollAuth\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = RestFrontEnrollAuthResponse;\n      return this.apiClient.callApi(\n        '/frontend/enroll', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Generic endpoint that can be implemented by 2FA systems for enrollment\n     * @param {module:model/RestFrontEnrollAuthRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontEnrollAuthResponse}\n     */\n    frontEnrollAuth(body) {\n      return this.frontEnrollAuthWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Serve list of I18n messages\n     * @param {String} Lang \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontMessagesResponse} and HTTP response\n     */\n    frontMessagesWithHttpInfo(Lang) {\n      let postBody = null;\n      // verify the required parameter 'Lang' is set\n      if (Lang === undefined || Lang === null) {\n        throw new Error(\"Missing the required parameter 'Lang' when calling frontMessages\");\n      }\n\n      let pathParams = {\n        'Lang': Lang\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = RestFrontMessagesResponse;\n      return this.apiClient.callApi(\n        '/frontend/messages/{Lang}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Serve list of I18n messages\n     * @param {String} Lang \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontMessagesResponse}\n     */\n    frontMessages(Lang) {\n      return this.frontMessagesWithHttpInfo(Lang)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Serve list of I18n messages\n     * @param {String} Lang \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontPluginsResponse} and HTTP response\n     */\n    frontPluginsWithHttpInfo(Lang) {\n      let postBody = null;\n      // verify the required parameter 'Lang' is set\n      if (Lang === undefined || Lang === null) {\n        throw new Error(\"Missing the required parameter 'Lang' when calling frontPlugins\");\n      }\n\n      let pathParams = {\n        'Lang': Lang\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = RestFrontPluginsResponse;\n      return this.apiClient.callApi(\n        '/frontend/plugins/{Lang}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Serve list of I18n messages\n     * @param {String} Lang \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontPluginsResponse}\n     */\n    frontPlugins(Lang) {\n      return this.frontPluginsWithHttpInfo(Lang)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Upload frontend binaries (avatars / logos / bg images)\n     * @param {String} BinaryType Currently supported values are USER and GLOBAL\n     * @param {String} Uuid Id of the binary\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBinaryResponse} and HTTP response\n     */\n    frontPutBinaryWithHttpInfo(BinaryType, Uuid) {\n      let postBody = null;\n      // verify the required parameter 'BinaryType' is set\n      if (BinaryType === undefined || BinaryType === null) {\n        throw new Error(\"Missing the required parameter 'BinaryType' when calling frontPutBinary\");\n      }\n      // verify the required parameter 'Uuid' is set\n      if (Uuid === undefined || Uuid === null) {\n        throw new Error(\"Missing the required parameter 'Uuid' when calling frontPutBinary\");\n      }\n\n      let pathParams = {\n        'BinaryType': BinaryType,\n        'Uuid': Uuid\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = RestFrontBinaryResponse;\n      return this.apiClient.callApi(\n        '/frontend/binaries/{BinaryType}/{Uuid}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Upload frontend binaries (avatars / logos / bg images)\n     * @param {String} BinaryType Currently supported values are USER and GLOBAL\n     * @param {String} Uuid Id of the binary\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBinaryResponse}\n     */\n    frontPutBinary(BinaryType, Uuid) {\n      return this.frontPutBinaryWithHttpInfo(BinaryType, Uuid)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Serve frontend binaries directly (avatars / logos / bg images)\n     * @param {String} BinaryType Currently supported values are USER and GLOBAL\n     * @param {String} Uuid Id of the binary\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontBinaryResponse} and HTTP response\n     */\n    frontServeBinaryWithHttpInfo(BinaryType, Uuid) {\n      let postBody = null;\n      // verify the required parameter 'BinaryType' is set\n      if (BinaryType === undefined || BinaryType === null) {\n        throw new Error(\"Missing the required parameter 'BinaryType' when calling frontServeBinary\");\n      }\n      // verify the required parameter 'Uuid' is set\n      if (Uuid === undefined || Uuid === null) {\n        throw new Error(\"Missing the required parameter 'Uuid' when calling frontServeBinary\");\n      }\n\n      let pathParams = {\n        'BinaryType': BinaryType,\n        'Uuid': Uuid\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = RestFrontBinaryResponse;\n      return this.apiClient.callApi(\n        '/frontend/binaries/{BinaryType}/{Uuid}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Serve frontend binaries directly (avatars / logos / bg images)\n     * @param {String} BinaryType Currently supported values are USER and GLOBAL\n     * @param {String} Uuid Id of the binary\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontBinaryResponse}\n     */\n    frontServeBinary(BinaryType, Uuid) {\n      return this.frontServeBinaryWithHttpInfo(BinaryType, Uuid)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Handle JWT\n     * @param {module:model/RestFrontSessionRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontSessionResponse} and HTTP response\n     */\n    frontSessionWithHttpInfo(body) {\n      let postBody = body;\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling frontSession\");\n      }\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = RestFrontSessionResponse;\n      return this.apiClient.callApi(\n        '/frontend/session', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Handle JWT\n     * @param {module:model/RestFrontSessionRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontSessionResponse}\n     */\n    frontSession(body) {\n      return this.frontSessionWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Send XML state registry\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.XPath \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestFrontStateResponse} and HTTP response\n     */\n    frontStateWithHttpInfo(opts) {\n      opts = opts || {};\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n        'XPath': opts['XPath']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = RestFrontStateResponse;\n      return this.apiClient.callApi(\n        '/frontend/state', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Send XML state registry\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.XPath \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestFrontStateResponse}\n     */\n    frontState(opts) {\n      return this.frontStateWithHttpInfo(opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Sends a tree of nodes to be used a menu in the Settings panel\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestSettingsMenuResponse} and HTTP response\n     */\n    settingsMenuWithHttpInfo() {\n      let postBody = null;\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = [];\n      let accepts = ['application/json'];\n      let returnType = RestSettingsMenuResponse;\n      return this.apiClient.callApi(\n        '/frontend/settings-menu', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, null\n      );\n    }\n\n    /**\n     * Sends a tree of nodes to be used a menu in the Settings panel\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestSettingsMenuResponse}\n     */\n    settingsMenu() {\n      return this.settingsMenuWithHttpInfo()\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"FrontendServiceApi.js"}