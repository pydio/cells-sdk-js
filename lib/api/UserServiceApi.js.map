{"version":3,"sources":["../../src/api/UserServiceApi.js"],"names":["UserServiceApi","apiClient","ApiClient","instance","login","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","RestDeleteResponse","callApi","deleteUserWithHttpInfo","then","response_and_data","data","opts","IdmUser","getUserWithHttpInfo","body","putRolesWithHttpInfo","putUserWithHttpInfo","RestUsersCollection","searchUsersWithHttpInfo"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport IdmUser from '../model/IdmUser';\nimport RestDeleteResponse from '../model/RestDeleteResponse';\nimport RestSearchUserRequest from '../model/RestSearchUserRequest';\nimport RestUsersCollection from '../model/RestUsersCollection';\n\n/**\n* UserService service.\n* @module api/UserServiceApi\n* @version 1.0\n*/\nexport default class UserServiceApi {\n\n    /**\n    * Constructs a new UserServiceApi. \n    * @alias module:api/UserServiceApi\n    * @class\n    * @param {module:ApiClient} apiClient Optional API client implementation to use,\n    * default to {@link module:ApiClient#instance} if unspecified.\n    */\n    constructor(apiClient) {\n        this.apiClient = apiClient || ApiClient.instance;\n    }\n\n\n\n    /**\n     * Delete a user\n     * @param {String} login \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response\n     */\n    deleteUserWithHttpInfo(login) {\n      let postBody = null;\n\n      // verify the required parameter 'login' is set\n      if (login === undefined || login === null) {\n        throw new Error(\"Missing the required parameter 'login' when calling deleteUser\");\n      }\n\n\n      let pathParams = {\n        'Login': login\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = RestDeleteResponse;\n\n      return this.apiClient.callApi(\n        '/user/{Login}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Delete a user\n     * @param {String} login \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}\n     */\n    deleteUser(login) {\n      return this.deleteUserWithHttpInfo(login)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Get a user by login\n     * @param {String} login \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.uuid User unique identifier.\n     * @param {String} opts.groupPath Path to the parent group.\n     * @param {String} opts.password Password can be passed to be updated (but never read back), field is empty for groups.\n     * @param {String} opts.oldPassword OldPassword must be set when a user updates her own password.\n     * @param {Boolean} opts.isGroup Whether this object is a group or a user.\n     * @param {String} opts.groupLabel Label of the group, field is empty for users.\n     * @param {Number} opts.lastConnected Last successful connection timestamp.\n     * @param {Boolean} opts.policiesContextEditable Context-resolved to quickly check if user is editable or not.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response\n     */\n    getUserWithHttpInfo(login, opts) {\n      opts = opts || {};\n      let postBody = null;\n\n      // verify the required parameter 'login' is set\n      if (login === undefined || login === null) {\n        throw new Error(\"Missing the required parameter 'login' when calling getUser\");\n      }\n\n\n      let pathParams = {\n        'Login': login\n      };\n      let queryParams = {\n        'Uuid': opts['uuid'],\n        'GroupPath': opts['groupPath'],\n        'Password': opts['password'],\n        'OldPassword': opts['oldPassword'],\n        'IsGroup': opts['isGroup'],\n        'GroupLabel': opts['groupLabel'],\n        'LastConnected': opts['lastConnected'],\n        'PoliciesContextEditable': opts['policiesContextEditable']\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = IdmUser;\n\n      return this.apiClient.callApi(\n        '/user/{Login}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Get a user by login\n     * @param {String} login \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.uuid User unique identifier.\n     * @param {String} opts.groupPath Path to the parent group.\n     * @param {String} opts.password Password can be passed to be updated (but never read back), field is empty for groups.\n     * @param {String} opts.oldPassword OldPassword must be set when a user updates her own password.\n     * @param {Boolean} opts.isGroup Whether this object is a group or a user.\n     * @param {String} opts.groupLabel Label of the group, field is empty for users.\n     * @param {Number} opts.lastConnected Last successful connection timestamp.\n     * @param {Boolean} opts.policiesContextEditable Context-resolved to quickly check if user is editable or not.\n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}\n     */\n    getUser(login, opts) {\n      return this.getUserWithHttpInfo(login, opts)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Just save a user roles, without other datas\n     * @param {String} login \n     * @param {module:model/IdmUser} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response\n     */\n    putRolesWithHttpInfo(login, body) {\n      let postBody = body;\n\n      // verify the required parameter 'login' is set\n      if (login === undefined || login === null) {\n        throw new Error(\"Missing the required parameter 'login' when calling putRoles\");\n      }\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putRoles\");\n      }\n\n\n      let pathParams = {\n        'Login': login\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = IdmUser;\n\n      return this.apiClient.callApi(\n        '/user/roles/{Login}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Just save a user roles, without other datas\n     * @param {String} login \n     * @param {module:model/IdmUser} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}\n     */\n    putRoles(login, body) {\n      return this.putRolesWithHttpInfo(login, body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * Create or update a user\n     * @param {String} login \n     * @param {module:model/IdmUser} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmUser} and HTTP response\n     */\n    putUserWithHttpInfo(login, body) {\n      let postBody = body;\n\n      // verify the required parameter 'login' is set\n      if (login === undefined || login === null) {\n        throw new Error(\"Missing the required parameter 'login' when calling putUser\");\n      }\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling putUser\");\n      }\n\n\n      let pathParams = {\n        'Login': login\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = IdmUser;\n\n      return this.apiClient.callApi(\n        '/user/{Login}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * Create or update a user\n     * @param {String} login \n     * @param {module:model/IdmUser} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmUser}\n     */\n    putUser(login, body) {\n      return this.putUserWithHttpInfo(login, body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n    /**\n     * List/Search users\n     * @param {module:model/RestSearchUserRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestUsersCollection} and HTTP response\n     */\n    searchUsersWithHttpInfo(body) {\n      let postBody = body;\n\n      // verify the required parameter 'body' is set\n      if (body === undefined || body === null) {\n        throw new Error(\"Missing the required parameter 'body' when calling searchUsers\");\n      }\n\n\n      let pathParams = {\n      };\n      let queryParams = {\n      };\n      let headerParams = {\n      };\n      let formParams = {\n      };\n\n      let authNames = [];\n      let contentTypes = ['application/json'];\n      let accepts = ['application/json'];\n      let returnType = RestUsersCollection;\n\n      return this.apiClient.callApi(\n        '/user', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType\n      );\n    }\n\n    /**\n     * List/Search users\n     * @param {module:model/RestSearchUserRequest} body \n     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestUsersCollection}\n     */\n    searchUsers(body) {\n      return this.searchUsersWithHttpInfo(body)\n        .then(function(response_and_data) {\n          return response_and_data.data;\n        });\n    }\n\n\n}\n"],"file":"UserServiceApi.js"}