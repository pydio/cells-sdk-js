{"version":3,"sources":["../../src/model/TreeReadNodeRequest.js"],"names":["TreeReadNodeRequest","undefined","data","obj","hasOwnProperty","TreeNode","constructFromObject","ApiClient","convertToType"],"mappings":";;;;;;;AAcA;;AACA;;;;;;;;;;;;AAMA;AACA;AACA;AACA;AACA;IACqBA,mB;AACjB;AACJ;AACA;AACA;AACA;AAEI,iCAAc;AAAA;;AAAA,kCA6CPC,SA7CO;;AAAA,yCAiDAA,SAjDA;;AAAA,+CAqDMA,SArDN;;AAAA,yCAyDAA,SAzDA;AASb;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;WACI,6BAA2BC,IAA3B,EAAiCC,GAAjC,EAAsC;AAClC,UAAID,IAAJ,EAAU;AACNC,QAAAA,GAAG,GAAGA,GAAG,IAAI,IAAIH,mBAAJ,EAAb;;AAMA,YAAIE,IAAI,CAACE,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC7BD,UAAAA,GAAG,CAAC,MAAD,CAAH,GAAcE,qBAASC,mBAAT,CAA6BJ,IAAI,CAAC,MAAD,CAAjC,CAAd;AACH;;AACD,YAAIA,IAAI,CAACE,cAAL,CAAoB,aAApB,CAAJ,EAAwC;AACpCD,UAAAA,GAAG,CAAC,aAAD,CAAH,GAAqBI,sBAAUC,aAAV,CAAwBN,IAAI,CAAC,aAAD,CAA5B,EAA6C,SAA7C,CAArB;AACH;;AACD,YAAIA,IAAI,CAACE,cAAL,CAAoB,mBAApB,CAAJ,EAA8C;AAC1CD,UAAAA,GAAG,CAAC,mBAAD,CAAH,GAA2BI,sBAAUC,aAAV,CAAwBN,IAAI,CAAC,mBAAD,CAA5B,EAAmD,SAAnD,CAA3B;AACH;;AACD,YAAIA,IAAI,CAACE,cAAL,CAAoB,aAApB,CAAJ,EAAwC;AACpCD,UAAAA,GAAG,CAAC,aAAD,CAAH,GAAqBI,sBAAUC,aAAV,CAAwBN,IAAI,CAAC,aAAD,CAA5B,EAA6C,SAA7C,CAArB;AACH;AACJ;;AACD,aAAOC,GAAP;AACH;AAED;AACJ;AACA","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\nimport TreeNode from './TreeNode';\n\n\n\n\n\n/**\n* The TreeReadNodeRequest model module.\n* @module model/TreeReadNodeRequest\n* @version 1.0\n*/\nexport default class TreeReadNodeRequest {\n    /**\n    * Constructs a new <code>TreeReadNodeRequest</code>.\n    * @alias module:model/TreeReadNodeRequest\n    * @class\n    */\n\n    constructor() {\n        \n\n        \n        \n\n        \n\n        \n    }\n\n    /**\n    * Constructs a <code>TreeReadNodeRequest</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/TreeReadNodeRequest} obj Optional instance to populate.\n    * @return {module:model/TreeReadNodeRequest} The populated <code>TreeReadNodeRequest</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new TreeReadNodeRequest();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('Node')) {\n                obj['Node'] = TreeNode.constructFromObject(data['Node']);\n            }\n            if (data.hasOwnProperty('WithCommits')) {\n                obj['WithCommits'] = ApiClient.convertToType(data['WithCommits'], 'Boolean');\n            }\n            if (data.hasOwnProperty('WithExtendedStats')) {\n                obj['WithExtendedStats'] = ApiClient.convertToType(data['WithExtendedStats'], 'Boolean');\n            }\n            if (data.hasOwnProperty('ObjectStats')) {\n                obj['ObjectStats'] = ApiClient.convertToType(data['ObjectStats'], 'Boolean');\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * @member {module:model/TreeNode} Node\n    */\n    Node = undefined;\n    /**\n    * @member {Boolean} WithCommits\n    */\n    WithCommits = undefined;\n    /**\n    * @member {Boolean} WithExtendedStats\n    */\n    WithExtendedStats = undefined;\n    /**\n    * @member {Boolean} ObjectStats\n    */\n    ObjectStats = undefined;\n\n\n\n\n\n\n\n\n}\n\n\n"],"file":"TreeReadNodeRequest.js"}