{"version":3,"sources":["../../src/model/TreeGeoQuery.js"],"names":["TreeGeoQuery","initialize","obj","data","hasOwnProperty","TreeGeoPoint","constructFromObject","ApiClient","convertToType","prototype","undefined"],"mappings":";;;;;;;AAaA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;IACMA,Y;AACF;AACJ;AACA;AACA;AACI,0BAAc;AAAA;;AAEVA,IAAAA,YAAY,CAACC,UAAb,CAAwB,IAAxB;AACH;AAED;AACJ;AACA;AACA;AACA;;;;;WACI,oBAAkBC,GAAlB,EAAuB,CACtB;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,6BAA2BC,IAA3B,EAAiCD,GAAjC,EAAsC;AAClC,UAAIC,IAAJ,EAAU;AACND,QAAAA,GAAG,GAAGA,GAAG,IAAI,IAAIF,YAAJ,EAAb;;AAEA,YAAIG,IAAI,CAACC,cAAL,CAAoB,aAApB,CAAJ,EAAwC;AACpCF,UAAAA,GAAG,CAAC,aAAD,CAAH,GAAqBG,yBAAaC,mBAAb,CAAiCH,IAAI,CAAC,aAAD,CAArC,CAArB;AACH;;AACD,YAAIA,IAAI,CAACC,cAAL,CAAoB,QAApB,CAAJ,EAAmC;AAC/BF,UAAAA,GAAG,CAAC,QAAD,CAAH,GAAgBG,yBAAaC,mBAAb,CAAiCH,IAAI,CAAC,QAAD,CAArC,CAAhB;AACH;;AACD,YAAIA,IAAI,CAACC,cAAL,CAAoB,UAApB,CAAJ,EAAqC;AACjCF,UAAAA,GAAG,CAAC,UAAD,CAAH,GAAkBK,sBAAUC,aAAV,CAAwBL,IAAI,CAAC,UAAD,CAA5B,EAA0C,QAA1C,CAAlB;AACH;;AACD,YAAIA,IAAI,CAACC,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AAChCF,UAAAA,GAAG,CAAC,SAAD,CAAH,GAAiBG,yBAAaC,mBAAb,CAAiCH,IAAI,CAAC,SAAD,CAArC,CAAjB;AACH;AACJ;;AACD,aAAOD,GAAP;AACH;;;;;AAKL;AACA;AACA;;;AACAF,YAAY,CAACS,SAAb,CAAuB,aAAvB,IAAwCC,SAAxC;AAEA;AACA;AACA;;AACAV,YAAY,CAACS,SAAb,CAAuB,QAAvB,IAAmCC,SAAnC;AAEA;AACA;AACA;AACA;;AACAV,YAAY,CAACS,SAAb,CAAuB,UAAvB,IAAqCC,SAArC;AAEA;AACA;AACA;;AACAV,YAAY,CAACS,SAAb,CAAuB,SAAvB,IAAoCC,SAApC;eAOeV,Y","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport TreeGeoPoint from './TreeGeoPoint';\n\n/**\n * The TreeGeoQuery model module.\n * @module model/TreeGeoQuery\n * @version 4.0\n */\nclass TreeGeoQuery {\n    /**\n     * Constructs a new <code>TreeGeoQuery</code>.\n     * @alias module:model/TreeGeoQuery\n     */\n    constructor() { \n        \n        TreeGeoQuery.initialize(this);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj) { \n    }\n\n    /**\n     * Constructs a <code>TreeGeoQuery</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/TreeGeoQuery} obj Optional instance to populate.\n     * @return {module:model/TreeGeoQuery} The populated <code>TreeGeoQuery</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new TreeGeoQuery();\n\n            if (data.hasOwnProperty('BottomRight')) {\n                obj['BottomRight'] = TreeGeoPoint.constructFromObject(data['BottomRight']);\n            }\n            if (data.hasOwnProperty('Center')) {\n                obj['Center'] = TreeGeoPoint.constructFromObject(data['Center']);\n            }\n            if (data.hasOwnProperty('Distance')) {\n                obj['Distance'] = ApiClient.convertToType(data['Distance'], 'String');\n            }\n            if (data.hasOwnProperty('TopLeft')) {\n                obj['TopLeft'] = TreeGeoPoint.constructFromObject(data['TopLeft']);\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {module:model/TreeGeoPoint} BottomRight\n */\nTreeGeoQuery.prototype['BottomRight'] = undefined;\n\n/**\n * @member {module:model/TreeGeoPoint} Center\n */\nTreeGeoQuery.prototype['Center'] = undefined;\n\n/**\n * Example formats supported: \\\"5in\\\" \\\"5inch\\\" \\\"7yd\\\" \\\"7yards\\\" \\\"9ft\\\" \\\"9feet\\\" \\\"11km\\\" \\\"11kilometers\\\" \\\"3nm\\\" \\\"3nauticalmiles\\\" \\\"13mm\\\" \\\"13millimeters\\\" \\\"15cm\\\" \\\"15centimeters\\\" \\\"17mi\\\" \\\"17miles\\\" \\\"19m\\\" \\\"19meters\\\" If the unit cannot be determined, the entire string is parsed and the unit of meters is assumed.\n * @member {String} Distance\n */\nTreeGeoQuery.prototype['Distance'] = undefined;\n\n/**\n * @member {module:model/TreeGeoPoint} TopLeft\n */\nTreeGeoQuery.prototype['TopLeft'] = undefined;\n\n\n\n\n\n\nexport default TreeGeoQuery;\n\n"],"file":"TreeGeoQuery.js"}