{"version":3,"sources":["../../src/model/TreeReadNodeResponse.js"],"names":["TreeReadNodeResponse","initialize","obj","data","hasOwnProperty","TreeNode","constructFromObject","ApiClient","convertToType","prototype","undefined"],"mappings":";;;;;;;AAaA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;IACMA,oB;AACF;AACJ;AACA;AACA;AACI,kCAAc;AAAA;;AAEVA,IAAAA,oBAAoB,CAACC,UAArB,CAAgC,IAAhC;AACH;AAED;AACJ;AACA;AACA;AACA;;;;;WACI,oBAAkBC,GAAlB,EAAuB,CACtB;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,6BAA2BC,IAA3B,EAAiCD,GAAjC,EAAsC;AAClC,UAAIC,IAAJ,EAAU;AACND,QAAAA,GAAG,GAAGA,GAAG,IAAI,IAAIF,oBAAJ,EAAb;;AAEA,YAAIG,IAAI,CAACC,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC7BF,UAAAA,GAAG,CAAC,MAAD,CAAH,GAAcG,qBAASC,mBAAT,CAA6BH,IAAI,CAAC,MAAD,CAAjC,CAAd;AACH;;AACD,YAAIA,IAAI,CAACC,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AAChCF,UAAAA,GAAG,CAAC,SAAD,CAAH,GAAiBK,sBAAUC,aAAV,CAAwBL,IAAI,CAAC,SAAD,CAA5B,EAAyC,SAAzC,CAAjB;AACH;AACJ;;AACD,aAAOD,GAAP;AACH;;;;;AAKL;AACA;AACA;;;AACAF,oBAAoB,CAACS,SAArB,CAA+B,MAA/B,IAAyCC,SAAzC;AAEA;AACA;AACA;;AACAV,oBAAoB,CAACS,SAArB,CAA+B,SAA/B,IAA4CC,SAA5C;eAOeV,oB","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport TreeNode from './TreeNode';\n\n/**\n * The TreeReadNodeResponse model module.\n * @module model/TreeReadNodeResponse\n * @version 4.0\n */\nclass TreeReadNodeResponse {\n    /**\n     * Constructs a new <code>TreeReadNodeResponse</code>.\n     * @alias module:model/TreeReadNodeResponse\n     */\n    constructor() { \n        \n        TreeReadNodeResponse.initialize(this);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj) { \n    }\n\n    /**\n     * Constructs a <code>TreeReadNodeResponse</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/TreeReadNodeResponse} obj Optional instance to populate.\n     * @return {module:model/TreeReadNodeResponse} The populated <code>TreeReadNodeResponse</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new TreeReadNodeResponse();\n\n            if (data.hasOwnProperty('Node')) {\n                obj['Node'] = TreeNode.constructFromObject(data['Node']);\n            }\n            if (data.hasOwnProperty('Success')) {\n                obj['Success'] = ApiClient.convertToType(data['Success'], 'Boolean');\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {module:model/TreeNode} Node\n */\nTreeReadNodeResponse.prototype['Node'] = undefined;\n\n/**\n * @member {Boolean} Success\n */\nTreeReadNodeResponse.prototype['Success'] = undefined;\n\n\n\n\n\n\nexport default TreeReadNodeResponse;\n\n"],"file":"TreeReadNodeResponse.js"}