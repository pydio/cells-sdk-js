{"version":3,"sources":["../../src/model/TreeQuery.js"],"names":["TreeQuery","undefined","data","obj","hasOwnProperty","ApiClient","convertToType","TreeNodeType","constructFromObject","TreeGeoQuery"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\nimport TreeGeoQuery from './TreeGeoQuery';\nimport TreeNodeType from './TreeNodeType';\n\n\n\n\n\n/**\n* The TreeQuery model module.\n* @module model/TreeQuery\n* @version 1.0\n*/\nexport default class TreeQuery {\n    /**\n    * Constructs a new <code>TreeQuery</code>.\n    * @alias module:model/TreeQuery\n    * @class\n    */\n\n    constructor() {\n        \n\n        \n        \n\n        \n\n        \n    }\n\n    /**\n    * Constructs a <code>TreeQuery</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/TreeQuery} obj Optional instance to populate.\n    * @return {module:model/TreeQuery} The populated <code>TreeQuery</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new TreeQuery();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('Paths')) {\n                obj['Paths'] = ApiClient.convertToType(data['Paths'], ['String']);\n            }\n            if (data.hasOwnProperty('PathPrefix')) {\n                obj['PathPrefix'] = ApiClient.convertToType(data['PathPrefix'], ['String']);\n            }\n            if (data.hasOwnProperty('MinSize')) {\n                obj['MinSize'] = ApiClient.convertToType(data['MinSize'], 'String');\n            }\n            if (data.hasOwnProperty('MaxSize')) {\n                obj['MaxSize'] = ApiClient.convertToType(data['MaxSize'], 'String');\n            }\n            if (data.hasOwnProperty('MinDate')) {\n                obj['MinDate'] = ApiClient.convertToType(data['MinDate'], 'String');\n            }\n            if (data.hasOwnProperty('MaxDate')) {\n                obj['MaxDate'] = ApiClient.convertToType(data['MaxDate'], 'String');\n            }\n            if (data.hasOwnProperty('DurationDate')) {\n                obj['DurationDate'] = ApiClient.convertToType(data['DurationDate'], 'String');\n            }\n            if (data.hasOwnProperty('Type')) {\n                obj['Type'] = TreeNodeType.constructFromObject(data['Type']);\n            }\n            if (data.hasOwnProperty('FileName')) {\n                obj['FileName'] = ApiClient.convertToType(data['FileName'], 'String');\n            }\n            if (data.hasOwnProperty('Content')) {\n                obj['Content'] = ApiClient.convertToType(data['Content'], 'String');\n            }\n            if (data.hasOwnProperty('FileNameOrContent')) {\n                obj['FileNameOrContent'] = ApiClient.convertToType(data['FileNameOrContent'], 'String');\n            }\n            if (data.hasOwnProperty('FreeString')) {\n                obj['FreeString'] = ApiClient.convertToType(data['FreeString'], 'String');\n            }\n            if (data.hasOwnProperty('Extension')) {\n                obj['Extension'] = ApiClient.convertToType(data['Extension'], 'String');\n            }\n            if (data.hasOwnProperty('GeoQuery')) {\n                obj['GeoQuery'] = TreeGeoQuery.constructFromObject(data['GeoQuery']);\n            }\n            if (data.hasOwnProperty('PathDepth')) {\n                obj['PathDepth'] = ApiClient.convertToType(data['PathDepth'], 'Number');\n            }\n            if (data.hasOwnProperty('UUIDs')) {\n                obj['UUIDs'] = ApiClient.convertToType(data['UUIDs'], ['String']);\n            }\n            if (data.hasOwnProperty('Not')) {\n                obj['Not'] = ApiClient.convertToType(data['Not'], 'Boolean');\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * @member {Array.<String>} Paths\n    */\n    Paths = undefined;\n    /**\n    * @member {Array.<String>} PathPrefix\n    */\n    PathPrefix = undefined;\n    /**\n    * @member {String} MinSize\n    */\n    MinSize = undefined;\n    /**\n    * @member {String} MaxSize\n    */\n    MaxSize = undefined;\n    /**\n    * @member {String} MinDate\n    */\n    MinDate = undefined;\n    /**\n    * @member {String} MaxDate\n    */\n    MaxDate = undefined;\n    /**\n    * @member {String} DurationDate\n    */\n    DurationDate = undefined;\n    /**\n    * @member {module:model/TreeNodeType} Type\n    */\n    Type = undefined;\n    /**\n    * @member {String} FileName\n    */\n    FileName = undefined;\n    /**\n    * @member {String} Content\n    */\n    Content = undefined;\n    /**\n    * @member {String} FileNameOrContent\n    */\n    FileNameOrContent = undefined;\n    /**\n    * @member {String} FreeString\n    */\n    FreeString = undefined;\n    /**\n    * @member {String} Extension\n    */\n    Extension = undefined;\n    /**\n    * @member {module:model/TreeGeoQuery} GeoQuery\n    */\n    GeoQuery = undefined;\n    /**\n    * @member {Number} PathDepth\n    */\n    PathDepth = undefined;\n    /**\n    * @member {Array.<String>} UUIDs\n    */\n    UUIDs = undefined;\n    /**\n    * @member {Boolean} Not\n    */\n    Not = undefined;\n\n\n\n\n\n\n\n\n}\n\n\n"],"file":"TreeQuery.js"}