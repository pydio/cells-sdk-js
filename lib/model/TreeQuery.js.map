{"version":3,"sources":["../../src/model/TreeQuery.js"],"names":["TreeQuery","initialize","obj","data","hasOwnProperty","ApiClient","convertToType","TreeGeoQuery","constructFromObject","TreeNodeType","prototype","undefined"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport TreeGeoQuery from './TreeGeoQuery';\nimport TreeNodeType from './TreeNodeType';\n\n/**\n * The TreeQuery model module.\n * @module model/TreeQuery\n * @version 4.0\n */\nclass TreeQuery {\n    /**\n     * Constructs a new <code>TreeQuery</code>.\n     * @alias module:model/TreeQuery\n     */\n    constructor() { \n        \n        TreeQuery.initialize(this);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj) { \n    }\n\n    /**\n     * Constructs a <code>TreeQuery</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/TreeQuery} obj Optional instance to populate.\n     * @return {module:model/TreeQuery} The populated <code>TreeQuery</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new TreeQuery();\n\n            if (data.hasOwnProperty('Content')) {\n                obj['Content'] = ApiClient.convertToType(data['Content'], 'String');\n            }\n            if (data.hasOwnProperty('DurationDate')) {\n                obj['DurationDate'] = ApiClient.convertToType(data['DurationDate'], 'String');\n            }\n            if (data.hasOwnProperty('Extension')) {\n                obj['Extension'] = ApiClient.convertToType(data['Extension'], 'String');\n            }\n            if (data.hasOwnProperty('FileName')) {\n                obj['FileName'] = ApiClient.convertToType(data['FileName'], 'String');\n            }\n            if (data.hasOwnProperty('FileNameOrContent')) {\n                obj['FileNameOrContent'] = ApiClient.convertToType(data['FileNameOrContent'], 'String');\n            }\n            if (data.hasOwnProperty('FreeString')) {\n                obj['FreeString'] = ApiClient.convertToType(data['FreeString'], 'String');\n            }\n            if (data.hasOwnProperty('GeoQuery')) {\n                obj['GeoQuery'] = TreeGeoQuery.constructFromObject(data['GeoQuery']);\n            }\n            if (data.hasOwnProperty('MaxDate')) {\n                obj['MaxDate'] = ApiClient.convertToType(data['MaxDate'], 'String');\n            }\n            if (data.hasOwnProperty('MaxSize')) {\n                obj['MaxSize'] = ApiClient.convertToType(data['MaxSize'], 'String');\n            }\n            if (data.hasOwnProperty('MinDate')) {\n                obj['MinDate'] = ApiClient.convertToType(data['MinDate'], 'String');\n            }\n            if (data.hasOwnProperty('MinSize')) {\n                obj['MinSize'] = ApiClient.convertToType(data['MinSize'], 'String');\n            }\n            if (data.hasOwnProperty('Not')) {\n                obj['Not'] = ApiClient.convertToType(data['Not'], 'Boolean');\n            }\n            if (data.hasOwnProperty('PathDepth')) {\n                obj['PathDepth'] = ApiClient.convertToType(data['PathDepth'], 'Number');\n            }\n            if (data.hasOwnProperty('PathPrefix')) {\n                obj['PathPrefix'] = ApiClient.convertToType(data['PathPrefix'], ['String']);\n            }\n            if (data.hasOwnProperty('Paths')) {\n                obj['Paths'] = ApiClient.convertToType(data['Paths'], ['String']);\n            }\n            if (data.hasOwnProperty('Type')) {\n                obj['Type'] = TreeNodeType.constructFromObject(data['Type']);\n            }\n            if (data.hasOwnProperty('UUIDs')) {\n                obj['UUIDs'] = ApiClient.convertToType(data['UUIDs'], ['String']);\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {String} Content\n */\nTreeQuery.prototype['Content'] = undefined;\n\n/**\n * @member {String} DurationDate\n */\nTreeQuery.prototype['DurationDate'] = undefined;\n\n/**\n * @member {String} Extension\n */\nTreeQuery.prototype['Extension'] = undefined;\n\n/**\n * @member {String} FileName\n */\nTreeQuery.prototype['FileName'] = undefined;\n\n/**\n * @member {String} FileNameOrContent\n */\nTreeQuery.prototype['FileNameOrContent'] = undefined;\n\n/**\n * @member {String} FreeString\n */\nTreeQuery.prototype['FreeString'] = undefined;\n\n/**\n * @member {module:model/TreeGeoQuery} GeoQuery\n */\nTreeQuery.prototype['GeoQuery'] = undefined;\n\n/**\n * @member {String} MaxDate\n */\nTreeQuery.prototype['MaxDate'] = undefined;\n\n/**\n * @member {String} MaxSize\n */\nTreeQuery.prototype['MaxSize'] = undefined;\n\n/**\n * @member {String} MinDate\n */\nTreeQuery.prototype['MinDate'] = undefined;\n\n/**\n * @member {String} MinSize\n */\nTreeQuery.prototype['MinSize'] = undefined;\n\n/**\n * @member {Boolean} Not\n */\nTreeQuery.prototype['Not'] = undefined;\n\n/**\n * @member {Number} PathDepth\n */\nTreeQuery.prototype['PathDepth'] = undefined;\n\n/**\n * @member {Array.<String>} PathPrefix\n */\nTreeQuery.prototype['PathPrefix'] = undefined;\n\n/**\n * @member {Array.<String>} Paths\n */\nTreeQuery.prototype['Paths'] = undefined;\n\n/**\n * @member {module:model/TreeNodeType} Type\n */\nTreeQuery.prototype['Type'] = undefined;\n\n/**\n * @member {Array.<String>} UUIDs\n */\nTreeQuery.prototype['UUIDs'] = undefined;\n\n\n\n\n\n\nexport default TreeQuery;\n\n"],"file":"TreeQuery.js"}