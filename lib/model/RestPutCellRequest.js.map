{"version":3,"sources":["../../src/model/RestPutCellRequest.js"],"names":["RestPutCellRequest","initialize","obj","data","hasOwnProperty","ApiClient","convertToType","RestCell","constructFromObject","prototype","undefined"],"mappings":";;;;;;;AAaA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;IACMA,kB;AACF;AACJ;AACA;AACA;AACI,gCAAc;AAAA;;AAEVA,IAAAA,kBAAkB,CAACC,UAAnB,CAA8B,IAA9B;AACH;AAED;AACJ;AACA;AACA;AACA;;;;;WACI,oBAAkBC,GAAlB,EAAuB,CACtB;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,6BAA2BC,IAA3B,EAAiCD,GAAjC,EAAsC;AAClC,UAAIC,IAAJ,EAAU;AACND,QAAAA,GAAG,GAAGA,GAAG,IAAI,IAAIF,kBAAJ,EAAb;;AAEA,YAAIG,IAAI,CAACC,cAAL,CAAoB,iBAApB,CAAJ,EAA4C;AACxCF,UAAAA,GAAG,CAAC,iBAAD,CAAH,GAAyBG,sBAAUC,aAAV,CAAwBH,IAAI,CAAC,iBAAD,CAA5B,EAAiD,SAAjD,CAAzB;AACH;;AACD,YAAIA,IAAI,CAACC,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC7BF,UAAAA,GAAG,CAAC,MAAD,CAAH,GAAcK,qBAASC,mBAAT,CAA6BL,IAAI,CAAC,MAAD,CAAjC,CAAd;AACH;AACJ;;AACD,aAAOD,GAAP;AACH;;;;;AAKL;AACA;AACA;;;AACAF,kBAAkB,CAACS,SAAnB,CAA6B,iBAA7B,IAAkDC,SAAlD;AAEA;AACA;AACA;;AACAV,kBAAkB,CAACS,SAAnB,CAA6B,MAA7B,IAAuCC,SAAvC;eAOeV,kB","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport RestCell from './RestCell';\n\n/**\n * The RestPutCellRequest model module.\n * @module model/RestPutCellRequest\n * @version 4.0\n */\nclass RestPutCellRequest {\n    /**\n     * Constructs a new <code>RestPutCellRequest</code>.\n     * @alias module:model/RestPutCellRequest\n     */\n    constructor() { \n        \n        RestPutCellRequest.initialize(this);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj) { \n    }\n\n    /**\n     * Constructs a <code>RestPutCellRequest</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/RestPutCellRequest} obj Optional instance to populate.\n     * @return {module:model/RestPutCellRequest} The populated <code>RestPutCellRequest</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new RestPutCellRequest();\n\n            if (data.hasOwnProperty('CreateEmptyRoot')) {\n                obj['CreateEmptyRoot'] = ApiClient.convertToType(data['CreateEmptyRoot'], 'Boolean');\n            }\n            if (data.hasOwnProperty('Room')) {\n                obj['Room'] = RestCell.constructFromObject(data['Room']);\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {Boolean} CreateEmptyRoot\n */\nRestPutCellRequest.prototype['CreateEmptyRoot'] = undefined;\n\n/**\n * @member {module:model/RestCell} Room\n */\nRestPutCellRequest.prototype['Room'] = undefined;\n\n\n\n\n\n\nexport default RestPutCellRequest;\n\n"],"file":"RestPutCellRequest.js"}