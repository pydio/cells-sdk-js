{"version":3,"sources":["../../src/model/RestTemplateNode.js"],"names":["RestTemplateNode","initialize","obj","data","hasOwnProperty","ApiClient","convertToType","TreeNode","constructFromObject","prototype","undefined"],"mappings":";;;;;;;AAaA;;AACA;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;IACMA,gB;AACF;AACJ;AACA;AACA;AACI,8BAAc;AAAA;;AAEVA,IAAAA,gBAAgB,CAACC,UAAjB,CAA4B,IAA5B;AACH;AAED;AACJ;AACA;AACA;AACA;;;;;WACI,oBAAkBC,GAAlB,EAAuB,CACtB;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,6BAA2BC,IAA3B,EAAiCD,GAAjC,EAAsC;AAClC,UAAIC,IAAJ,EAAU;AACND,QAAAA,GAAG,GAAGA,GAAG,IAAI,IAAIF,gBAAJ,EAAb;;AAEA,YAAIG,IAAI,CAACC,cAAL,CAAoB,UAApB,CAAJ,EAAqC;AACjCF,UAAAA,GAAG,CAAC,UAAD,CAAH,GAAkBG,sBAAUC,aAAV,CAAwBH,IAAI,CAAC,UAAD,CAA5B,EAA0C;AAAC,sBAAUI;AAAX,WAA1C,CAAlB;AACH;;AACD,YAAIJ,IAAI,CAACC,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAC7BF,UAAAA,GAAG,CAAC,MAAD,CAAH,GAAcK,qBAASC,mBAAT,CAA6BL,IAAI,CAAC,MAAD,CAAjC,CAAd;AACH;AACJ;;AACD,aAAOD,GAAP;AACH;;;;;AAKL;AACA;AACA;;;AACAF,gBAAgB,CAACS,SAAjB,CAA2B,UAA3B,IAAyCC,SAAzC;AAEA;AACA;AACA;;AACAV,gBAAgB,CAACS,SAAjB,CAA2B,MAA3B,IAAqCC,SAArC;eAOeV,gB","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport TreeNode from './TreeNode';\n\n/**\n * The RestTemplateNode model module.\n * @module model/RestTemplateNode\n * @version 4.0\n */\nclass RestTemplateNode {\n    /**\n     * Constructs a new <code>RestTemplateNode</code>.\n     * @alias module:model/RestTemplateNode\n     */\n    constructor() { \n        \n        RestTemplateNode.initialize(this);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj) { \n    }\n\n    /**\n     * Constructs a <code>RestTemplateNode</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/RestTemplateNode} obj Optional instance to populate.\n     * @return {module:model/RestTemplateNode} The populated <code>RestTemplateNode</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new RestTemplateNode();\n\n            if (data.hasOwnProperty('Children')) {\n                obj['Children'] = ApiClient.convertToType(data['Children'], {'String': TreeNode});\n            }\n            if (data.hasOwnProperty('Node')) {\n                obj['Node'] = TreeNode.constructFromObject(data['Node']);\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {Object.<String, module:model/TreeNode>} Children\n */\nRestTemplateNode.prototype['Children'] = undefined;\n\n/**\n * @member {module:model/TreeNode} Node\n */\nRestTemplateNode.prototype['Node'] = undefined;\n\n\n\n\n\n\nexport default RestTemplateNode;\n\n"],"file":"RestTemplateNode.js"}