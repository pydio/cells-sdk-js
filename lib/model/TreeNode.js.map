{"version":3,"sources":["../../src/model/TreeNode.js"],"names":["TreeNode","undefined","data","obj","hasOwnProperty","ApiClient","convertToType","TreeNodeType","constructFromObject","TreeChangeLog","TreeWorkspaceRelativePath"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 1.0\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from '../ApiClient';\nimport TreeChangeLog from './TreeChangeLog';\nimport TreeNodeType from './TreeNodeType';\nimport TreeWorkspaceRelativePath from './TreeWorkspaceRelativePath';\n\n\n\n\n\n/**\n* The TreeNode model module.\n* @module model/TreeNode\n* @version 1.0\n*/\nexport default class TreeNode {\n    /**\n    * Constructs a new <code>TreeNode</code>.\n    * @alias module:model/TreeNode\n    * @class\n    */\n\n    constructor() {\n        \n\n        \n        \n\n        \n\n        \n    }\n\n    /**\n    * Constructs a <code>TreeNode</code> from a plain JavaScript object, optionally creating a new instance.\n    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n    * @param {Object} data The plain JavaScript object bearing properties of interest.\n    * @param {module:model/TreeNode} obj Optional instance to populate.\n    * @return {module:model/TreeNode} The populated <code>TreeNode</code> instance.\n    */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new TreeNode();\n\n            \n            \n            \n\n            if (data.hasOwnProperty('Uuid')) {\n                obj['Uuid'] = ApiClient.convertToType(data['Uuid'], 'String');\n            }\n            if (data.hasOwnProperty('Path')) {\n                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');\n            }\n            if (data.hasOwnProperty('Type')) {\n                obj['Type'] = TreeNodeType.constructFromObject(data['Type']);\n            }\n            if (data.hasOwnProperty('Size')) {\n                obj['Size'] = ApiClient.convertToType(data['Size'], 'String');\n            }\n            if (data.hasOwnProperty('MTime')) {\n                obj['MTime'] = ApiClient.convertToType(data['MTime'], 'String');\n            }\n            if (data.hasOwnProperty('Mode')) {\n                obj['Mode'] = ApiClient.convertToType(data['Mode'], 'Number');\n            }\n            if (data.hasOwnProperty('Etag')) {\n                obj['Etag'] = ApiClient.convertToType(data['Etag'], 'String');\n            }\n            if (data.hasOwnProperty('Commits')) {\n                obj['Commits'] = ApiClient.convertToType(data['Commits'], [TreeChangeLog]);\n            }\n            if (data.hasOwnProperty('MetaStore')) {\n                obj['MetaStore'] = ApiClient.convertToType(data['MetaStore'], {'String': 'String'});\n            }\n            if (data.hasOwnProperty('AppearsIn')) {\n                obj['AppearsIn'] = ApiClient.convertToType(data['AppearsIn'], [TreeWorkspaceRelativePath]);\n            }\n        }\n        return obj;\n    }\n\n    /**\n    * @member {String} Uuid\n    */\n    Uuid = undefined;\n    /**\n    * @member {String} Path\n    */\n    Path = undefined;\n    /**\n    * @member {module:model/TreeNodeType} Type\n    */\n    Type = undefined;\n    /**\n    * @member {String} Size\n    */\n    Size = undefined;\n    /**\n    * @member {String} MTime\n    */\n    MTime = undefined;\n    /**\n    * @member {Number} Mode\n    */\n    Mode = undefined;\n    /**\n    * @member {String} Etag\n    */\n    Etag = undefined;\n    /**\n    * @member {Array.<module:model/TreeChangeLog>} Commits\n    */\n    Commits = undefined;\n    /**\n    * @member {Object.<String, String>} MetaStore\n    */\n    MetaStore = undefined;\n    /**\n    * @member {Array.<module:model/TreeWorkspaceRelativePath>} AppearsIn\n    */\n    AppearsIn = undefined;\n\n\n\n\n\n\n\n\n}\n\n\n"],"file":"TreeNode.js"}