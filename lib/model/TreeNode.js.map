{"version":3,"sources":["../../src/model/TreeNode.js"],"names":["TreeNode","initialize","obj","data","hasOwnProperty","ApiClient","convertToType","TreeWorkspaceRelativePath","TreeChangeLog","TreeNodeType","constructFromObject","prototype","undefined"],"mappings":"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","sourcesContent":["/**\n * Pydio Cells Rest API\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 4.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n *\n */\n\nimport ApiClient from '../ApiClient';\nimport TreeChangeLog from './TreeChangeLog';\nimport TreeNodeType from './TreeNodeType';\nimport TreeWorkspaceRelativePath from './TreeWorkspaceRelativePath';\n\n/**\n * The TreeNode model module.\n * @module model/TreeNode\n * @version 4.0\n */\nclass TreeNode {\n    /**\n     * Constructs a new <code>TreeNode</code>.\n     * @alias module:model/TreeNode\n     */\n    constructor() { \n        \n        TreeNode.initialize(this);\n    }\n\n    /**\n     * Initializes the fields of this object.\n     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).\n     * Only for internal use.\n     */\n    static initialize(obj) { \n    }\n\n    /**\n     * Constructs a <code>TreeNode</code> from a plain JavaScript object, optionally creating a new instance.\n     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n     * @param {Object} data The plain JavaScript object bearing properties of interest.\n     * @param {module:model/TreeNode} obj Optional instance to populate.\n     * @return {module:model/TreeNode} The populated <code>TreeNode</code> instance.\n     */\n    static constructFromObject(data, obj) {\n        if (data) {\n            obj = obj || new TreeNode();\n\n            if (data.hasOwnProperty('AppearsIn')) {\n                obj['AppearsIn'] = ApiClient.convertToType(data['AppearsIn'], [TreeWorkspaceRelativePath]);\n            }\n            if (data.hasOwnProperty('Commits')) {\n                obj['Commits'] = ApiClient.convertToType(data['Commits'], [TreeChangeLog]);\n            }\n            if (data.hasOwnProperty('Etag')) {\n                obj['Etag'] = ApiClient.convertToType(data['Etag'], 'String');\n            }\n            if (data.hasOwnProperty('MTime')) {\n                obj['MTime'] = ApiClient.convertToType(data['MTime'], 'String');\n            }\n            if (data.hasOwnProperty('MetaStore')) {\n                obj['MetaStore'] = ApiClient.convertToType(data['MetaStore'], {'String': 'String'});\n            }\n            if (data.hasOwnProperty('Mode')) {\n                obj['Mode'] = ApiClient.convertToType(data['Mode'], 'Number');\n            }\n            if (data.hasOwnProperty('Path')) {\n                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');\n            }\n            if (data.hasOwnProperty('Size')) {\n                obj['Size'] = ApiClient.convertToType(data['Size'], 'String');\n            }\n            if (data.hasOwnProperty('Type')) {\n                obj['Type'] = TreeNodeType.constructFromObject(data['Type']);\n            }\n            if (data.hasOwnProperty('Uuid')) {\n                obj['Uuid'] = ApiClient.convertToType(data['Uuid'], 'String');\n            }\n        }\n        return obj;\n    }\n\n\n}\n\n/**\n * @member {Array.<module:model/TreeWorkspaceRelativePath>} AppearsIn\n */\nTreeNode.prototype['AppearsIn'] = undefined;\n\n/**\n * @member {Array.<module:model/TreeChangeLog>} Commits\n */\nTreeNode.prototype['Commits'] = undefined;\n\n/**\n * @member {String} Etag\n */\nTreeNode.prototype['Etag'] = undefined;\n\n/**\n * @member {String} MTime\n */\nTreeNode.prototype['MTime'] = undefined;\n\n/**\n * @member {Object.<String, String>} MetaStore\n */\nTreeNode.prototype['MetaStore'] = undefined;\n\n/**\n * @member {Number} Mode\n */\nTreeNode.prototype['Mode'] = undefined;\n\n/**\n * @member {String} Path\n */\nTreeNode.prototype['Path'] = undefined;\n\n/**\n * @member {String} Size\n */\nTreeNode.prototype['Size'] = undefined;\n\n/**\n * @member {module:model/TreeNodeType} Type\n */\nTreeNode.prototype['Type'] = undefined;\n\n/**\n * @member {String} Uuid\n */\nTreeNode.prototype['Uuid'] = undefined;\n\n\n\n\n\n\nexport default TreeNode;\n\n"],"file":"TreeNode.js"}