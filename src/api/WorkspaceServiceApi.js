/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import IdmWorkspace from '../model/IdmWorkspace';
import InlineObject2 from '../model/InlineObject2';
import RestDeleteResponse from '../model/RestDeleteResponse';
import RestError from '../model/RestError';
import RestSearchWorkspaceRequest from '../model/RestSearchWorkspaceRequest';
import RestWorkspaceCollection from '../model/RestWorkspaceCollection';

/**
* WorkspaceService service.
* @module api/WorkspaceServiceApi
* @version 4.0
*/
export default class WorkspaceServiceApi {

    /**
    * Constructs a new WorkspaceServiceApi. 
    * @alias module:api/WorkspaceServiceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Delete an existing workspace
     * @param {String} Slug Slug is an url-compatible form of the workspace label, or can be freely modified (max length 500)
     * @param {Object} opts Optional parameters
     * @param {String} opts.UUID Unique identifier of the workspace
     * @param {String} opts.Label Label of the workspace (max length 500)
     * @param {String} opts.Description Description of the workspace (max length 1000)
     * @param {module:model/String} opts.Scope Scope can be ADMIN, ROOM (=CELL) or LINK (default to 'ANY')
     * @param {Number} opts.LastUpdated Last modification time
     * @param {String} opts.Attributes JSON-encoded list of attributes
     * @param {Array.<String>} opts.RootUUIDs Quick list of the RootNodes uuids
     * @param {Boolean} opts.PoliciesContextEditable Context-resolved to quickly check if workspace is editable or not
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response
     */
    deleteWorkspaceWithHttpInfo(Slug, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'Slug' is set
      if (Slug === undefined || Slug === null) {
        throw new Error("Missing the required parameter 'Slug' when calling deleteWorkspace");
      }

      let pathParams = {
        'Slug': Slug
      };
      let queryParams = {
        'UUID': opts['UUID'],
        'Label': opts['Label'],
        'Description': opts['Description'],
        'Scope': opts['Scope'],
        'LastUpdated': opts['LastUpdated'],
        'Attributes': opts['Attributes'],
        'RootUUIDs': this.apiClient.buildCollectionParam(opts['RootUUIDs'], 'multi'),
        'PoliciesContextEditable': opts['PoliciesContextEditable']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RestDeleteResponse;
      return this.apiClient.callApi(
        '/workspace/{Slug}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Delete an existing workspace
     * @param {String} Slug Slug is an url-compatible form of the workspace label, or can be freely modified (max length 500)
     * @param {Object} opts Optional parameters
     * @param {String} opts.UUID Unique identifier of the workspace
     * @param {String} opts.Label Label of the workspace (max length 500)
     * @param {String} opts.Description Description of the workspace (max length 1000)
     * @param {module:model/String} opts.Scope Scope can be ADMIN, ROOM (=CELL) or LINK (default to 'ANY')
     * @param {Number} opts.LastUpdated Last modification time
     * @param {String} opts.Attributes JSON-encoded list of attributes
     * @param {Array.<String>} opts.RootUUIDs Quick list of the RootNodes uuids
     * @param {Boolean} opts.PoliciesContextEditable Context-resolved to quickly check if workspace is editable or not
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}
     */
    deleteWorkspace(Slug, opts) {
      return this.deleteWorkspaceWithHttpInfo(Slug, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Create or update a workspace
     * @param {String} Slug Slug is an url-compatible form of the workspace label, or can be freely modified (max length 500)
     * @param {module:model/InlineObject2} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmWorkspace} and HTTP response
     */
    putWorkspaceWithHttpInfo(Slug, body) {
      let postBody = body;
      // verify the required parameter 'Slug' is set
      if (Slug === undefined || Slug === null) {
        throw new Error("Missing the required parameter 'Slug' when calling putWorkspace");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling putWorkspace");
      }

      let pathParams = {
        'Slug': Slug
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = IdmWorkspace;
      return this.apiClient.callApi(
        '/workspace/{Slug}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Create or update a workspace
     * @param {String} Slug Slug is an url-compatible form of the workspace label, or can be freely modified (max length 500)
     * @param {module:model/InlineObject2} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmWorkspace}
     */
    putWorkspace(Slug, body) {
      return this.putWorkspaceWithHttpInfo(Slug, body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Search workspaces on certain keys
     * @param {module:model/RestSearchWorkspaceRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestWorkspaceCollection} and HTTP response
     */
    searchWorkspacesWithHttpInfo(body) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling searchWorkspaces");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RestWorkspaceCollection;
      return this.apiClient.callApi(
        '/workspace', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Search workspaces on certain keys
     * @param {module:model/RestSearchWorkspaceRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestWorkspaceCollection}
     */
    searchWorkspaces(body) {
      return this.searchWorkspacesWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
