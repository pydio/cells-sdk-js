/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TreeChangeLog from './TreeChangeLog';
import TreeNodeType from './TreeNodeType';
import TreeWorkspaceRelativePath from './TreeWorkspaceRelativePath';

/**
 * The TreeNode model module.
 * @module model/TreeNode
 * @version 4.0
 */
class TreeNode {
    /**
     * Constructs a new <code>TreeNode</code>.
     * @alias module:model/TreeNode
     */
    constructor() { 
        
        TreeNode.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TreeNode</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TreeNode} obj Optional instance to populate.
     * @return {module:model/TreeNode} The populated <code>TreeNode</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TreeNode();

            if (data.hasOwnProperty('AppearsIn')) {
                obj['AppearsIn'] = ApiClient.convertToType(data['AppearsIn'], [TreeWorkspaceRelativePath]);
            }
            if (data.hasOwnProperty('Commits')) {
                obj['Commits'] = ApiClient.convertToType(data['Commits'], [TreeChangeLog]);
            }
            if (data.hasOwnProperty('Etag')) {
                obj['Etag'] = ApiClient.convertToType(data['Etag'], 'String');
            }
            if (data.hasOwnProperty('MTime')) {
                obj['MTime'] = ApiClient.convertToType(data['MTime'], 'String');
            }
            if (data.hasOwnProperty('MetaStore')) {
                obj['MetaStore'] = ApiClient.convertToType(data['MetaStore'], {'String': 'String'});
            }
            if (data.hasOwnProperty('Mode')) {
                obj['Mode'] = ApiClient.convertToType(data['Mode'], 'Number');
            }
            if (data.hasOwnProperty('Path')) {
                obj['Path'] = ApiClient.convertToType(data['Path'], 'String');
            }
            if (data.hasOwnProperty('Size')) {
                obj['Size'] = ApiClient.convertToType(data['Size'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = TreeNodeType.constructFromObject(data['Type']);
            }
            if (data.hasOwnProperty('Uuid')) {
                obj['Uuid'] = ApiClient.convertToType(data['Uuid'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/TreeWorkspaceRelativePath>} AppearsIn
 */
TreeNode.prototype['AppearsIn'] = undefined;

/**
 * @member {Array.<module:model/TreeChangeLog>} Commits
 */
TreeNode.prototype['Commits'] = undefined;

/**
 * @member {String} Etag
 */
TreeNode.prototype['Etag'] = undefined;

/**
 * @member {String} MTime
 */
TreeNode.prototype['MTime'] = undefined;

/**
 * @member {Object.<String, String>} MetaStore
 */
TreeNode.prototype['MetaStore'] = undefined;

/**
 * @member {Number} Mode
 */
TreeNode.prototype['Mode'] = undefined;

/**
 * @member {String} Path
 */
TreeNode.prototype['Path'] = undefined;

/**
 * @member {String} Size
 */
TreeNode.prototype['Size'] = undefined;

/**
 * @member {module:model/TreeNodeType} Type
 */
TreeNode.prototype['Type'] = undefined;

/**
 * @member {String} Uuid
 */
TreeNode.prototype['Uuid'] = undefined;






export default TreeNode;

