/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RegistryActionType from './RegistryActionType';
import RegistryItemType from './RegistryItemType';

/**
 * The RegistryOptions model module.
 * @module model/RegistryOptions
 * @version 4.0
 */
class RegistryOptions {
    /**
     * Constructs a new <code>RegistryOptions</code>.
     * @alias module:model/RegistryOptions
     */
    constructor() { 
        
        RegistryOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RegistryOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RegistryOptions} obj Optional instance to populate.
     * @return {module:model/RegistryOptions} The populated <code>RegistryOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RegistryOptions();

            if (data.hasOwnProperty('actions')) {
                obj['actions'] = ApiClient.convertToType(data['actions'], [RegistryActionType]);
            }
            if (data.hasOwnProperty('metaName')) {
                obj['metaName'] = ApiClient.convertToType(data['metaName'], 'String');
            }
            if (data.hasOwnProperty('metaValue')) {
                obj['metaValue'] = ApiClient.convertToType(data['metaValue'], 'String');
            }
            if (data.hasOwnProperty('names')) {
                obj['names'] = ApiClient.convertToType(data['names'], ['String']);
            }
            if (data.hasOwnProperty('ttl')) {
                obj['ttl'] = ApiClient.convertToType(data['ttl'], 'String');
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], [RegistryItemType]);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/RegistryActionType>} actions
 */
RegistryOptions.prototype['actions'] = undefined;

/**
 * @member {String} metaName
 */
RegistryOptions.prototype['metaName'] = undefined;

/**
 * @member {String} metaValue
 */
RegistryOptions.prototype['metaValue'] = undefined;

/**
 * @member {Array.<String>} names
 */
RegistryOptions.prototype['names'] = undefined;

/**
 * @member {String} ttl
 */
RegistryOptions.prototype['ttl'] = undefined;

/**
 * @member {Array.<module:model/RegistryItemType>} types
 */
RegistryOptions.prototype['types'] = undefined;






export default RegistryOptions;

