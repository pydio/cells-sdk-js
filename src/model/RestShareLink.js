/**
 * Pydio Cells Rest API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RestShareLinkAccessType from './RestShareLinkAccessType';
import RestShareLinkTargetUser from './RestShareLinkTargetUser';
import ServiceResourcePolicy from './ServiceResourcePolicy';
import TreeNode from './TreeNode';

/**
 * The RestShareLink model module.
 * @module model/RestShareLink
 * @version 4.0
 */
class RestShareLink {
    /**
     * Constructs a new <code>RestShareLink</code>.
     * @alias module:model/RestShareLink
     */
    constructor() { 
        
        RestShareLink.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RestShareLink</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RestShareLink} obj Optional instance to populate.
     * @return {module:model/RestShareLink} The populated <code>RestShareLink</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RestShareLink();

            if (data.hasOwnProperty('AccessEnd')) {
                obj['AccessEnd'] = ApiClient.convertToType(data['AccessEnd'], 'String');
            }
            if (data.hasOwnProperty('AccessStart')) {
                obj['AccessStart'] = ApiClient.convertToType(data['AccessStart'], 'String');
            }
            if (data.hasOwnProperty('CurrentDownloads')) {
                obj['CurrentDownloads'] = ApiClient.convertToType(data['CurrentDownloads'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Label')) {
                obj['Label'] = ApiClient.convertToType(data['Label'], 'String');
            }
            if (data.hasOwnProperty('LinkHash')) {
                obj['LinkHash'] = ApiClient.convertToType(data['LinkHash'], 'String');
            }
            if (data.hasOwnProperty('LinkUrl')) {
                obj['LinkUrl'] = ApiClient.convertToType(data['LinkUrl'], 'String');
            }
            if (data.hasOwnProperty('MaxDownloads')) {
                obj['MaxDownloads'] = ApiClient.convertToType(data['MaxDownloads'], 'String');
            }
            if (data.hasOwnProperty('PasswordRequired')) {
                obj['PasswordRequired'] = ApiClient.convertToType(data['PasswordRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('Permissions')) {
                obj['Permissions'] = ApiClient.convertToType(data['Permissions'], [RestShareLinkAccessType]);
            }
            if (data.hasOwnProperty('Policies')) {
                obj['Policies'] = ApiClient.convertToType(data['Policies'], [ServiceResourcePolicy]);
            }
            if (data.hasOwnProperty('PoliciesContextEditable')) {
                obj['PoliciesContextEditable'] = ApiClient.convertToType(data['PoliciesContextEditable'], 'Boolean');
            }
            if (data.hasOwnProperty('RestrictToTargetUsers')) {
                obj['RestrictToTargetUsers'] = ApiClient.convertToType(data['RestrictToTargetUsers'], 'Boolean');
            }
            if (data.hasOwnProperty('RootNodes')) {
                obj['RootNodes'] = ApiClient.convertToType(data['RootNodes'], [TreeNode]);
            }
            if (data.hasOwnProperty('TargetUsers')) {
                obj['TargetUsers'] = ApiClient.convertToType(data['TargetUsers'], {'String': RestShareLinkTargetUser});
            }
            if (data.hasOwnProperty('UserLogin')) {
                obj['UserLogin'] = ApiClient.convertToType(data['UserLogin'], 'String');
            }
            if (data.hasOwnProperty('UserUuid')) {
                obj['UserUuid'] = ApiClient.convertToType(data['UserUuid'], 'String');
            }
            if (data.hasOwnProperty('Uuid')) {
                obj['Uuid'] = ApiClient.convertToType(data['Uuid'], 'String');
            }
            if (data.hasOwnProperty('ViewTemplateName')) {
                obj['ViewTemplateName'] = ApiClient.convertToType(data['ViewTemplateName'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} AccessEnd
 */
RestShareLink.prototype['AccessEnd'] = undefined;

/**
 * @member {String} AccessStart
 */
RestShareLink.prototype['AccessStart'] = undefined;

/**
 * @member {String} CurrentDownloads
 */
RestShareLink.prototype['CurrentDownloads'] = undefined;

/**
 * @member {String} Description
 */
RestShareLink.prototype['Description'] = undefined;

/**
 * @member {String} Label
 */
RestShareLink.prototype['Label'] = undefined;

/**
 * @member {String} LinkHash
 */
RestShareLink.prototype['LinkHash'] = undefined;

/**
 * @member {String} LinkUrl
 */
RestShareLink.prototype['LinkUrl'] = undefined;

/**
 * @member {String} MaxDownloads
 */
RestShareLink.prototype['MaxDownloads'] = undefined;

/**
 * @member {Boolean} PasswordRequired
 */
RestShareLink.prototype['PasswordRequired'] = undefined;

/**
 * @member {Array.<module:model/RestShareLinkAccessType>} Permissions
 */
RestShareLink.prototype['Permissions'] = undefined;

/**
 * @member {Array.<module:model/ServiceResourcePolicy>} Policies
 */
RestShareLink.prototype['Policies'] = undefined;

/**
 * @member {Boolean} PoliciesContextEditable
 */
RestShareLink.prototype['PoliciesContextEditable'] = undefined;

/**
 * @member {Boolean} RestrictToTargetUsers
 */
RestShareLink.prototype['RestrictToTargetUsers'] = undefined;

/**
 * @member {Array.<module:model/TreeNode>} RootNodes
 */
RestShareLink.prototype['RootNodes'] = undefined;

/**
 * @member {Object.<String, module:model/RestShareLinkTargetUser>} TargetUsers
 */
RestShareLink.prototype['TargetUsers'] = undefined;

/**
 * @member {String} UserLogin
 */
RestShareLink.prototype['UserLogin'] = undefined;

/**
 * @member {String} UserUuid
 */
RestShareLink.prototype['UserUuid'] = undefined;

/**
 * @member {String} Uuid
 */
RestShareLink.prototype['Uuid'] = undefined;

/**
 * @member {String} ViewTemplateName
 */
RestShareLink.prototype['ViewTemplateName'] = undefined;






export default RestShareLink;

